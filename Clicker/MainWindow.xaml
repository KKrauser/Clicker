<Window x:Class="Clicker.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:converters="clr-namespace:Clicker.Converters"
        xmlns:local="clr-namespace:Clicker"
        xmlns:controls="clr-namespace:Clicker.Controls"
        mc:Ignorable="d"
        Title="Clicker" Height="180" Width="500" ResizeMode="CanMinimize" Icon="../Resources/click.png">

    <Window.Resources>
        <converters:IntToStringConverter x:Key="IntToStringConverter" />
        <converters:InverseBoolConverter x:Key="InverseBoolConverter" />
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <Style x:Key="ClickerButton" TargetType="{x:Type Button}">
            <Setter Property="Height" Value="30" />
            <Setter Property="Width" Value="100" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="button" CornerRadius="5" BorderBrush="Black" BorderThickness="1" Background="Azure">
                            <TextBlock Text="{TemplateBinding Button.Content}" HorizontalAlignment="Center"
                                       VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="button" Property="Background" Value="LightGray" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="button" Property="Background" Value="Azure" />
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="button" Property="BorderBrush" Value="#FF282828" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="button" Property="Opacity" Value="0.7" />
                                <Setter Property="Foreground" Value="Gray" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ClickerProgress" TargetType="{x:Type ProgressBar}">
            <Setter Property="Height" Value="30" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="BorderBrush" Value="Black" />
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <GroupBox Header="Settings" BorderBrush="Black">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                <TextBlock Text="Clicks count: " VerticalAlignment="Center" />
                <controls:NumericInput x:Name="Count"
                                       Text="{Binding ClicksTotal, Mode=OneWayToSource, Converter={StaticResource IntToStringConverter}}"
                                       Height="20" Width="60" Margin="0,0,20,0"
                                       ToolTip="Enter number of clicks to make or 0 to click until you manually stop it" />

                <TextBlock Grid.Column="1" Text="Click Delay(ms): " VerticalAlignment="Center" />
                <controls:NumericInput x:Name="Delay"
                                       Text="{Binding Delay, Mode=OneWayToSource, Converter={StaticResource IntToStringConverter}}"
                                       Grid.Column="1" Height="20" Width="32" />

                <TextBlock Grid.Column="2" Text=" +- " VerticalAlignment="Center" />
                <controls:NumericInput x:Name="DelayDeviation"
                                       Text="{Binding DelayDeviation, Mode=OneWayToSource, Converter={StaticResource IntToStringConverter}}"
                                       Grid.Column="2" Height="20"
                                       MinWidth="13" MaxWidth="32" Margin="0,0,20,0" />

                <TextBlock Grid.Column="2" Text="Start Delay(s): " VerticalAlignment="Center" />
                <controls:NumericInput x:Name="StartDelay"
                                       Text="{Binding StartDelay, Mode=OneWayToSource, Converter={StaticResource IntToStringConverter}}"
                                       Grid.Column="2" Height="20"
                                       MinWidth="13" MaxWidth="32" Margin="0,0,20,0" />
            </StackPanel>
        </GroupBox>

        <ProgressBar Grid.Row="1" Value="{Binding Progress}"
                     Style="{StaticResource ClickerProgress}" Margin="15,15" />
        <TextBlock Grid.Row="1" Text="{Binding ProgressDescription}" HorizontalAlignment="Center" VerticalAlignment="Center" />
        <Button Grid.Row="2" Style="{StaticResource ClickerButton}" Margin="1,1" Content="Run"
                IsEnabled="{Binding IsRunning, Converter={StaticResource InverseBoolConverter}}" Command="{Binding RunCommand}" />
        <Label Grid.Row="2" Content="Press ESC to STOP" Foreground="Red" FontSize="14" FontWeight="Bold"
               Visibility="{Binding IsRunning, Converter={StaticResource BoolToVisibilityConverter}}" HorizontalAlignment="Left"
               VerticalAlignment="Center">
            <Label.Style>
                <Style TargetType="Label">
                    <Style.Triggers>
                        <Trigger Property="Visibility" Value="Visible">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.7" From="1" To="0.2" Storyboard.TargetProperty="Opacity"
                                                         AutoReverse="True" RepeatBehavior="Forever" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Label.Style>
        </Label>
    </Grid>
</Window>